{"version":3,"file":"ruler.esm.js","sources":["../src/react-ruler/Ruler.tsx","../src/react-ruler/consts.ts"],"sourcesContent":["import * as React from \"react\";\nimport { ref } from \"framework-utils\";\nimport { RulerInterface, RulerProps } from \"./types\";\nimport { convertUnitSize } from \"@daybrush/utils\";\n\nexport default class Ruler extends React.PureComponent<RulerProps> implements RulerInterface {\n    public static defaultProps: Partial<RulerProps> = {\n        type: \"horizontal\",\n        zoom: 1,\n        width: 0,\n        height: 0,\n        unit: 50,\n        negativeRuler: true,\n        mainLineSize: \"100%\",\n        longLineSize: 10,\n        shortLineSize: 7,\n        segment: 10,\n        direction: \"end\",\n        style: { width: \"100%\", height: \"100%\" },\n        backgroundColor: \"#333333\",\n        font: \"10px sans-serif\",\n        textColor: \"#ffffff\",\n        textBackgroundColor: 'transparent',\n        lineColor: \"#777777\",\n        range: [-Infinity, Infinity],\n        rangeBackgroundColor: 'transparent',\n        lineWidth: 1,\n        selectedBackgroundColor: \"#555555\",\n    };\n    public divisionsElement!: HTMLElement;\n    public state = {\n        scrollPos: 0,\n    };\n    public canvasElement!: HTMLCanvasElement;\n    private canvasContext!: CanvasRenderingContext2D;\n    private width: number = 0;\n    private height: number = 0;\n    private _zoom = 0;\n    private _rulerScale = 0;\n    private _observer: ResizeObserver | null = null;\n\n    public render() {\n        const props = this.props;\n        const portalContainer = props.portalContainer;\n        let portalAttributes: Record<string, any> = {};\n\n        if ((React.version || \"\").indexOf(\"simple\") > -1 && portalContainer) {\n            portalAttributes = { portalContainer };\n        }\n        this._zoom = props.zoom!;\n        return <canvas\n            ref={ref(this, \"canvasElement\")}\n            {...portalAttributes}\n            style={this.props.style} />;\n\n    }\n    public componentDidMount() {\n        const canvas = this.canvasElement;\n        const context = canvas.getContext(\"2d\", { alpha: false })!;\n\n        this.canvasContext = context;\n\n        if (this.props.useResizeObserver) {\n            this._observer = new ResizeObserver(this._checkResize);\n\n            this._observer.observe(canvas, {\n                box: \"border-box\",\n            });\n        } else {\n            this.resize();\n        }\n    }\n    public componentDidUpdate() {\n        this.resize();\n    }\n    public componentWillUnmount(): void {\n        this.state.scrollPos = 0;\n        this._observer?.disconnect();\n    }\n    /**\n     * Gets the scroll position of the ruler.\n     */\n    public getScrollPos() {\n        return this.state.scrollPos;\n    }\n    /**\n     * @method Ruler#scroll\n     * @param scrollPos\n     */\n    public scroll(scrollPos: number, nextZoom?: number) {\n        this.draw(scrollPos, nextZoom);\n    }\n    /**\n     * @method Ruler#resize\n     */\n    public resize(nextZoom?: number) {\n        const canvas = this.canvasElement;\n        const {\n            width,\n            height,\n            scrollPos,\n        } = this.props;\n        const rulerScale = this._getRulerScale();\n\n        this.width = width || canvas.offsetWidth;\n        this.height = height || canvas.offsetHeight;\n        canvas.width = this.width * rulerScale;\n        canvas.height = this.height * rulerScale;\n        this.draw(scrollPos, nextZoom);\n    }\n    private draw(scrollPos: number = this.state.scrollPos, nextZoom = this._zoom) {\n        this._zoom = nextZoom;\n        const props = this.props;\n        const {\n            unit,\n            type,\n            backgroundColor,\n            lineColor,\n            textColor,\n            textBackgroundColor,\n            direction,\n            negativeRuler = true,\n            segment = 10,\n            textFormat,\n            range = [-Infinity, Infinity],\n            rangeBackgroundColor,\n            selectedRanges,\n            selectedBackgroundColor,\n            lineWidth = 1,\n        } = props as Required<RulerProps>;\n\n        const rulerScale = this._getRulerScale();\n        const width = this.width;\n        const height = this.height;\n        const state = this.state;\n        state.scrollPos = scrollPos;\n        const context = this.canvasContext;\n        const isHorizontal = type === \"horizontal\";\n        const isNegative = negativeRuler !== false;\n        const font = props.font || \"10px sans-serif\";\n        const textAlign = props.textAlign || \"left\";\n        const textOffset = props.textOffset || [0, 0];\n        const containerSize = isHorizontal ? height : width;\n        const mainLineSize = convertUnitSize(`${props.mainLineSize || \"100%\"}`, containerSize);\n        const longLineSize = convertUnitSize(`${props.longLineSize || 10}`, containerSize);\n        const shortLineSize = convertUnitSize(`${props.shortLineSize || 7}`, containerSize);\n        const lineOffset = props.lineOffset || [0, 0];\n\n        if (backgroundColor === \"transparent\") {\n            // Clear existing paths & text\n            context.clearRect(0, 0, width * rulerScale, height * rulerScale);\n        } else {\n            // Draw the background\n            context.rect(0, 0, width * rulerScale, height * rulerScale);\n            context.fillStyle = backgroundColor;\n            context.fill();\n        }\n\n\n        context.save();\n        context.scale(rulerScale, rulerScale);\n        context.strokeStyle = lineColor;\n        context.lineWidth = lineWidth;\n        context.font = font;\n        context.fillStyle = textColor;\n\n        switch (direction) {\n            case \"start\":\n                context.textBaseline = \"top\";\n                break;\n            case \"center\":\n                context.textBaseline = \"middle\";\n                break;\n            case \"end\":\n                context.textBaseline = \"bottom\";\n                break;\n        }\n\n        context.translate(0.5, 0);\n        context.beginPath();\n\n        const size = isHorizontal ? width : height;\n        const zoomUnit = nextZoom * unit;\n        const minRange = Math.floor(scrollPos * nextZoom / zoomUnit);\n        const maxRange = Math.ceil((scrollPos * nextZoom + size) / zoomUnit);\n        const length = maxRange - minRange;\n        const alignOffset = Math.max([\"left\", \"center\", \"right\"].indexOf(textAlign) - 1, -1);\n        const barSize = isHorizontal ? height : width;\n\n        // Draw Selected Range Background\n        if (selectedBackgroundColor !== \"transparent\" && selectedRanges?.length) {\n            selectedRanges.forEach(selectedRange => {\n                const rangeStart = Math.max(selectedRange[0], range[0], negativeRuler ? -Infinity : 0);\n                const rangeEnd = Math.min(selectedRange[1], range[1]);\n                const rangeX = (rangeStart - scrollPos) * nextZoom;\n                const rangeWidth = ((rangeEnd - rangeStart) * nextZoom);\n\n\n                if (rangeWidth <= 0) {\n                    return;\n                }\n\n                context.save();\n                context.fillStyle = selectedBackgroundColor;\n                if (isHorizontal) {\n                    context.fillRect(rangeX, 0, rangeWidth, barSize);\n                } else {\n                    context.fillRect(0, rangeX, barSize, rangeWidth);\n                }\n\n                context.restore();\n            });\n        }\n        // Draw Range Background\n        if (rangeBackgroundColor !== \"transparent\" && range[0] !== -Infinity && range[1] !== Infinity) {\n            const rangeStart = (range[0] - scrollPos) * nextZoom;\n            const rangeEnd = ((range[1] - range[0]) * nextZoom);\n            context.save();\n            context.fillStyle = rangeBackgroundColor;\n            if (isHorizontal) {\n                context.fillRect(rangeStart, 0, rangeEnd, barSize);\n            } else {\n                context.fillRect(0, rangeStart, barSize, rangeEnd);\n            }\n\n            context.restore();\n        }\n\n        // Render Segments First\n        for (let i = 0; i <= length; ++i) {\n            const value = i + minRange;\n\n            if (!isNegative && value < 0) {\n                continue;\n            }\n            const startValue = value * unit;\n            const startPos = (startValue - scrollPos) * nextZoom;\n\n            for (let j = 0; j < segment; ++j) {\n                const pos = startPos + j / segment * zoomUnit;\n                const value = startValue + j / segment * unit;\n\n                if (pos < 0 || pos >= size || value < range[0] || value > range[1]) {\n                    continue;\n                }\n\n                const lineSize = j === 0\n                    ? mainLineSize\n                    : (j % 2 === 0 ? longLineSize : shortLineSize);\n\n                let origin = 0\n                switch (direction) {\n                    case \"start\":\n                        origin = 0;\n                        break;\n                    case \"center\":\n                        origin = barSize / 2 - lineSize / 2;\n                        break;\n                    case \"end\":\n                        origin = barSize - lineSize;\n                        break;\n                }\n\n                const [x1, y1] = isHorizontal ?\n                    [pos + lineOffset[0], origin + lineOffset[1]] :\n                    [origin + lineOffset[0], pos + lineOffset[1]];\n\n                const [x2, y2] = isHorizontal ? [x1, y1 + lineSize] : [x1 + lineSize, y1];\n\n                context.moveTo(x1 + lineOffset[0], y1 + lineOffset[1]);\n                context.lineTo(x2 + lineOffset[0], y2 + lineOffset[1]);\n            }\n        }\n        context.stroke();\n\n        // Render Labels\n        for (let i = 0; i <= length; ++i) {\n            const value = i + minRange;\n\n            if (!isNegative && value < 0) {\n                continue;\n            }\n            const startValue = value * unit;\n            const startPos = (startValue - scrollPos) * nextZoom;\n\n            if (startPos < -zoomUnit || startPos >= size + unit * nextZoom || startValue < range[0] || startValue > range[1]) {\n                continue;\n            }\n\n            let origin = 0\n            switch (direction) {\n                case \"start\":\n                    origin = 17;\n                    break;\n                case \"center\":\n                    origin = barSize / 2;\n                    break;\n                case \"end\":\n                    origin = barSize - 17;\n                    break;\n            }\n\n            const [startX, startY] = isHorizontal\n                ? [startPos + alignOffset * -3, origin]\n                : [origin, startPos + alignOffset * 3];\n\n            let text = `${startValue}`;\n\n            if (textFormat) {\n                text = textFormat(startValue);\n            }\n\n            context.textAlign = textAlign;\n\n\n            let backgroundOffset = 0\n            const textSize = context.measureText(text).width\n            switch (textAlign) {\n                case \"left\":\n                    backgroundOffset = 0;\n                    break;\n                case \"center\":\n                    backgroundOffset = -textSize / 2;\n                    break;\n                case \"right\":\n                    backgroundOffset = -textSize;\n                    break;\n            }\n\n            if (isHorizontal) {\n                context.save();\n                context.fillStyle = textBackgroundColor;\n                context.fillRect(startX + textOffset[0] + backgroundOffset, 0, textSize, mainLineSize);\n                context.restore();\n            } else {\n                context.save();\n                context.translate(0, startY + textOffset[1]);\n                context.rotate(-Math.PI / 2);\n                context.fillStyle = textBackgroundColor;\n                context.fillRect(backgroundOffset, 0, textSize, mainLineSize);\n                context.restore();\n            }\n\n            if (isHorizontal) {\n                context.fillText(text, startX + textOffset[0], startY + textOffset[1]);\n            } else {\n                context.save();\n                context.translate(startX + textOffset[0], startY + textOffset[1]);\n                context.rotate(-Math.PI / 2);\n                context.fillText(text, 0, 0);\n                context.restore();\n            }\n        }\n\n        context.restore();\n    }\n    private _getRulerScale() {\n        const defaultPixelScale = this.props.defaultPixelScale || 2;\n\n        if (!this._rulerScale) {\n            let isHighDensity = window.devicePixelRatio > 1;\n\n            if (!isHighDensity && window.matchMedia) {\n                const mq = window.matchMedia('only screen and (min--moz-device-pixel-ratio: 1.3), only screen and (-o-min-device-pixel-ratio: 2.6/2), only screen and (-webkit-min-device-pixel-ratio: 1.3), only screen  and (min-device-pixel-ratio: 1.3), only screen and (min-resolution: 1.3dppx)');\n                isHighDensity = mq && mq.matches;\n            }\n            this._rulerScale = isHighDensity ? 3 : defaultPixelScale;\n        }\n        return this._rulerScale;\n    }\n    private _checkResize = () => {\n        this.resize();\n    }\n}\n","import { RulerInterface, RulerProps } from \"./types\";\n\nexport const PROPERTIES: Array<keyof RulerProps> = [\n    \"type\",\n    \"width\",\n    \"height\",\n    \"unit\",\n    \"zoom\",\n    \"direction\",\n    \"textAlign\",\n    \"font\",\n    \"segment\",\n    \"mainLineSize\",\n    \"longLineSize\",\n    \"shortLineSize\",\n    \"lineOffset\",\n    \"textOffset\",\n    \"negativeRuler\",\n    \"range\",\n    \"scrollPos\",\n    \"style\",\n    \"backgroundColor\",\n    \"rangeBackgroundColor\",\n    \"lineColor\",\n    \"textColor\",\n    \"textBackgroundColor\",\n    \"textFormat\",\n    \"portalContainer\",\n    \"selectedBackgroundColor\",\n    \"selectedRanges\",\n    \"defaultPixelScale\",\n    \"useResizeObserver\",\n];\nexport const METHODS: Array<keyof RulerInterface> = [\n    \"scroll\",\n    \"resize\",\n    \"getScrollPos\",\n];\n"],"names":["__extends","_this","scrollPos","resize","props","portalContainer","portalAttributes","React","indexOf","_zoom","zoom","ref","style","canvas","canvasElement","context","getContext","alpha","canvasContext","useResizeObserver","_observer","ResizeObserver","_checkResize","observe","box","state","disconnect","nextZoom","draw","_a","width","height","rulerScale","_getRulerScale","offsetWidth","offsetHeight","unit","type","backgroundColor","lineColor","textColor","textBackgroundColor","direction","_b","negativeRuler","_c","segment","textFormat","_d","range","Infinity","rangeBackgroundColor","selectedRanges","selectedBackgroundColor","_e","lineWidth","isHorizontal","isNegative","font","textAlign","textOffset","containerSize","mainLineSize","convertUnitSize","longLineSize","shortLineSize","lineOffset","clearRect","rect","fillStyle","fill","save","scale","strokeStyle","textBaseline","translate","beginPath","size","zoomUnit","minRange","Math","floor","maxRange","ceil","length","alignOffset","max","barSize","forEach","selectedRange","rangeStart","rangeEnd","min","rangeX","rangeWidth","fillRect","restore","i","value","startValue","startPos","j","pos","value_1","lineSize","origin","_f","x1","y1","_g","x2","y2","moveTo","lineTo","stroke","_h","startX","startY","text","backgroundOffset","textSize","measureText","rotate","PI","fillText","defaultPixelScale","_rulerScale","isHighDensity","window","devicePixelRatio","matchMedia","mq","matches","Ruler","PROPERTIES","METHODS"],"mappings":"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"}